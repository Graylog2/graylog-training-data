version: "3.8"

services:
  mongodb:
    image: "mongo:6"
    volumes:
      - "mongodb_data:/data/db"
    restart: "always"

  opensearch:
    container_name: "opensearch"
    environment:
      OPENSEARCH_JAVA_OPTS: "-Xms2g -Xmx2g -Dlog4j2.formatMsgNoLookups=true"
      bootstrap.memory_lock: "true"
      discovery.type: "single-node"
      http.host: "0.0.0.0"
      action.auto_create_index: "false"
      DISABLE_INSTALL_DEMO_CONFIG: "true" # disables execution of install_demo_configuration.sh bundled with security plugin, which installs demo certificates and security configurations to OpenSearch
      DISABLE_SECURITY_PLUGIN: "true" # disables security plugin entirely in OpenSearch by setting plugins.security.
    image: "opensearchproject/opensearch:2"
    ulimits:
      memlock:
        hard: -1
        soft: -1
    ports:
    - "9200:9200/tcp"   # es ports

    volumes:
      - "os-data1:/usr/share/opensearch/data"
    restart: "always"

  graylog:
    image: "graylog/graylog-enterprise:6.1.0-1"
    depends_on:
      opensearch:
        condition: "service_started"
      mongodb:
        condition: "service_started"
    entrypoint: "/usr/bin/tini -- wait-for-it opensearch:9200 --  /docker-entrypoint.sh"
    environment:
      GRAYLOG_MESSAGE_JOURNAL_MAX_SIZE: 1gb
      GRAYLOG_PASSWORD_SECRET: somepasswordpepper
      GRAYLOG_ROOT_USERNAME: ${GLUSER}
      GRAYLOG_ROOT_PASSWORD_SHA2: 941828f6268291fa3aa87a866e8367e609434f42761bdf02dc7fc7958897bae6
      GRAYLOG_HTTP_BIND_ADDRESS: ${GLBINDADDR}
      GRAYLOG_HTTP_EXTERNAL_URI: ${GLEURI}
      GRAYLOG_HTTP_PUBLISH_URI: ${GLEURI}
      GRAYLOG_ELASTICSEARCH_HOSTS: "http://opensearch:9200"
      GRAYLOG_MONGODB_URI: "mongodb://mongodb:27017/graylog"
      GRAYLOG_HTTP_ENABLE_TLS: ${GLTLS}
      GRAYLOG_HTTP_TLS_CERT_FILE: ${GLCERT}
      GRAYLOG_HTTP_TLS_KEY_FILE: ${GLKEY}
      GRAYLOG_SERVER_JAVA_OPTS: ${GLJAVAOPTS}
      GRAYLOG_PROMETHEUS_EXPORTER_ENABLED: "true"
      GRAYLOG_PROMETHEUS_EXPORTER_BIND_ADDRESS: "graylog:9833"
      GRAYLOG_PROMETHEUS_EXPORTER_MAPPING_FILE_PATH_CUSTOM: "/usr/share/graylog-server/prometheus-exporter-mapping-custom.yml"

    ports:
      - "5044:5044/tcp"   # Beats
      - "1500:1500/udp"   # MS Logs Raw UDP
      - "1501:1501/udp"   # MacOS Logs Raw UDP
      - "9000:9000/tcp"   # Server API
      - "9833:9833/tcp"   # Prometheus
      - "443:443/tcp"     # Server API
      - "12201:12201/tcp" # GELF TCPsudo
      - "12201:12201/udp" # GELF UDP

    volumes:
      - "graylog_data:/usr/share/graylog/data/data"
      - "graylog_journal:/usr/share/graylog/data/journal"
      - "graylog_config:/usr/share/graylog/data/config"
      - /etc/graylog/prometheus-exporter-mapping-custom.yml:/usr/share/graylog-server/prometheus-exporter-mapping-custom.yml:ro
    restart: "always"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command: "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - /etc/graylog/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped

  node_exporter:
    image: quay.io/prometheus/node-exporter:v1.5.0
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave

  elasticsearch_exporter:
    image: quay.io/prometheuscommunity/elasticsearch-exporter:latest
    command:
     - '--es.uri=http://opensearch:9200'
    restart: always
    ports:
    - "9114:9114"

  mongodb_exporter:
    image: percona/mongodb_exporter:0.20
    command:
      - '--mongodb.uri=mongodb://mongodb:27017'
    restart: always
    ports:
    - "9216:9216"


volumes:
  mongodb_data:
  os-data1:
  graylog_data:
  graylog_journal:
  graylog_config:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local